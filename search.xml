<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[布局和包含块]]></title>
    <url>%2F2019%2F01%2F16%2F%E5%B8%83%E5%B1%80%E5%92%8C%E5%8C%85%E5%90%AB%E5%9D%97%2F</url>
    <content type="text"><![CDATA[什么是包含块？一个元素的尺寸和位置经常受包含块的影响，包含块就是这个元素最近的祖先块（父级）元素的内容区，但也不总是这样。 包含块的重要性，或者说：什么时候用？当我们对元素赋予百分比值时，元素的width、height、padding、margin，position被设置为absolute或fixed时，这些值的计算值通过包含块来计算。 疑问：那么sizing-box可否替代包含快？它们有什么区别？不能代替。sizing-box是改变计算盒模型宽度和高度的属性。而包含块影响着元素的尺寸和位置。 如何确定包含块？ position 属性为static或者relative，包含块就是由它的最近祖先（块元素）或块格式化上下文的内容区的边缘组成。 position 属性为absolute，包含块就是由它最近的 position 值为(fixed、absolute、relative、sticky)的祖先元素的内边距区的边缘组成。 如果 position 属性是 fixed，包含块就是由 viewport (in the case of continuous media) 或是组成的。 如果 position 属性是 absolute 或 fixed，包含块也可能是由满足以下条件的最近父级元素的内边距区的边缘组成的： 1 transform 属性不为 none。 2 will-change 或 perspective 为一个改变值，但这两个属性仍处于开发中。 3 filter 不为none 或 will-change 值为 filter 但仅限于 Firefox浏览器。 根据包含块计算百分值如上所述，如果某些属性被赋予一个百分值的话，它的计算值是由这个元素的包含块计算而来的。这些属性包括盒模型属性和偏移属性： 要计算 height top 及 bottom 中的百分值，是通过包含块的 height 的值。如果包含块的 height 值会根据它的内容变化，而且包含块的 position 属性的值被赋予 relative 或 static ，那么，这些值的计算值为 0。 要计算 width, left, right, padding, margin 这些属性由包含块的 width 属性的值来计算它的百分值。 代码示例12345&lt;body&gt; &lt;div&gt; &lt;h3&gt;This is H3&lt;/h3&gt; &lt;/div&gt;&lt;/body&gt; 12345678910111213141516171819例子中 H3 为static定位，所以它的包含块是距离它最近的div。body &#123; background: aliceblue;&#125;div &#123; width: 300px; height: 200px; background: red;&#125;h3 &#123; width: 50%; /* == 300px * .5 = 150px */ height: 25%; /* == 200px * .25 = 50px */ margin: 5%; /* == 300px * .05 = 10px */ padding: 5%; /* == 200px * .05 = 10px */ background: white;&#125; 1234567891011121314151617例子中 div不是块元素，并没有形成格式上下文，所以 H3 的包含块为body，body的poistion：static，所以 H3 的高度为0。div &#123; dispaly: inline; width: 300px; height: 200px; background: red;&#125;h3 &#123; width: 50%; /* == body width * .5 */ height: 200px; /* == 百分值 为 0 */ margin: 5%; /* == body width * .05 */ padding: 5%; /* == body width * .05 */ position: absolute; background: white;&#125; 1234567891011121314151617181920例子中 div是 H3 的包含块，因为div的poistion：sticky。(如果为 absolute || relative || fixed）同理H3 元素的百分值会受到 div的padding所影响。不过，如果包含块的box-sizing值为border-box，就没有这个问题。div &#123; width: 300px; height: 200px; background: red; position: sticky; padding: 30px 20px; /** box-sizing: border-box; **/&#125;h3 &#123; width: 50%; /* == (300 + 20 + 20) * .5 = 170 */ height: 25%; /* == (200 + 30 + 30) * .25 = 65 */ margin: 5%; /* == (300 + 20 + 20) * .05 = 17 */ padding: 5%; /* == (300 + 20 + 20) * .05 = 17 */ position: absolute; background: white;&#125; 1234567891011121314151617例子中 H3 元素为position: fixed，它的包含块为 viewport组成，H3的大小会跟随屏幕大小变化而变化。div &#123; width: 300px; height: 200px; background: red; padding: 30px 20px;&#125;h3 &#123; width: 50%; /* 垂直滚动条 50% 的宽度 */ height: 25%; /* 水平滚动条 50% 的高度*/ margin: 5%; /* 垂直滚动条 5% 的宽度*/ padding: 5%; /* 垂直滚动条 5% 的宽度*/ position: fixed; background: white;&#125; 12345678910111213141516171819202122例子中 元素position 属性为 fixed，它的包含块是div，因为div的transform属性值不是none。div &#123; width: 300px; height: 200px; background: red; top: 30px; left: 0px; transform: rotate(0deg); /* will-change: transform; 功能还在开发中 */ /* perspective: 20px; 功能还在开发中 */ /* filter: brightness(1); 功能仅限于 firefox浏览器 */&#125;h3 &#123; width: 50%; /* 150px */ height: 25%; /* 50px */ margin: 5%; /* 15 */ padding: 5%; /* 15 */ position: fixed; background: white;&#125;]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>盒模型</tag>
        <tag>包含块</tag>
        <tag>布局</tag>
      </tags>
  </entry>
</search>
